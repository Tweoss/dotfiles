{:layers {}
 :applications {:chrome ["^net\\.java\\.openjdk\\.cmd$"]
                :mimestream ["^com\\.mimestream\\.Mimestream$"]
                :messages ["^com\\.apple\\.MobileSMS$"]
                :forklift ["^com\\.binarynights\\.ForkLift-3$"]
                :obsidian ["^md\\.obsidian$"]
                :code ["^com\\.microsoft\\.VSCode$"]
                :arc ["^company\\.thebrowser\\.Browser$"]}
 :devices {:econ_clicker [{:vendor_id 3469}
                          {:product_id 5398}]
           :white_rk [{:vendor_id 14}
                      {:product_id 13330}]} ;; devices

 :froms {:anykey {:any :key_code :modi {:optional [:any]}}}

 :main [{:des "layers"
         :rules [[:caps_lock ["caps-mode" 1] [:!yabai-layer :!disable-layer :!window-layer] {:alone :escape :afterup ["caps-mode" 0]}]]}
        {:des "clicker mapping for google slides"
         :rules [:econ_clicker
                 [:!Sf5 :left_arrow]
                 [:escape :left_arrow]
                 [:!STOp :vk_none]
                 [:!COp :vk_none]
                 [:b :right_arrow]]}
        {:des "clearing notifications in vscode"
         :rules [[:!Scaps_lock :!Sescape]]}
        {:des "Messages Conversation Nav"
         :rules [:caps-mode :messages
                 [:tab :!Ttab]
                 [:!Stab :!STtab]]}
        {:des "General Nav"
         :rules [:caps-mode
                 [:!Rtab :!COleft_arrow]
                 [:!Stab :!COleft_arrow]
                 [:tab :!COright_arrow]]}
        {:des "capslock layer"
         :rules [:caps-mode
                ; VIM MODE - hold caps and HJKL
                ; home row computing
                 [:!Tl "/opt/homebrew/bin/yabai -m space --focus next"]
                 [:!Th "/opt/homebrew/bin/yabai -m space --focus prev"]
                 [:##h :left_arrow] ; even with f, still do left arrow
                 [:##k :up_arrow]
                 [:##j :down_arrow]
                 [:##l :right_arrow]
                 [:##s :left_shift]
                ; delete forward, but using right_command
                 [:##right_command :delete_forward]
                ; also for royal kludge keyboard
                 [:##right_option :delete_forward :white_rk]
                 [:##spacebar ["caps-mode" 0]]
                ; one password
                 [:##p :!!backslash]
                ; turning on yabai-layer
                 [:m [["yabai-layer" 1] ["caps-mode" 0] "/opt/homebrew/bin/yabai -m config normal_window_border_color 0xFF9925bE"]]
                ; turning on window-layer
                 [:comma [["window-layer" 1] ["caps-mode" 0] "/opt/homebrew/bin/yabai -m config normal_window_border_color 0xFF058510"]]
                ; turning on disable-layer
                 [:d [["disable-layer" 1] ["caps-mode" 0] ["yabai-layer" 0]]]
                ; turning on screensaver
                 [:escape "/System/Library/CoreServices/ScreenSaverEngine.app/Contents/MacOS/ScreenSaverEngine"]
                ; clearing notifications
                ; [:c "osascript -l JavaScript /Users/francischua/gitutils/executables/applescript/clear.scpt"]
                ; [:c "osascript -L Javascript ~/gitutils/executables/applescript/temp.scpt"]
                ; word counter
                 [:i :!!c]
                ; toggle left sidebar
                 [:a :!!a]
                ; open quick fix in vscode
                 [:f :!!y]
                ; format in vscode 
                 [:y :!Cperiod]]}
        {:des "yabai layer"
         :rules [[:condi :yabai-layer]
                ; disabling yabai-layer
                 [:caps_lock [["yabai-layer" 0] "/opt/homebrew/bin/yabai -m config normal_window_border_color 0xFF3E3E3E"]]
                ; toggle window float
                 [:f "/opt/homebrew/bin/yabai -m window --toggle float"]
                ; full screen like moom
                 [:spacebar "/opt/homebrew/bin/yabai -m window --grid 1:1:0:0:1:1"]
                ; corner combos
                 [[:h :j] "/opt/homebrew/bin/yabai -m window --grid 2:2:0:1:1:2"]
                 [[:h :k] "/opt/homebrew/bin/yabai -m window --grid 2:2:0:0:1:1"]
                 [[:l :j] "/opt/homebrew/bin/yabai -m window --grid 2:2:1:1:2:2"]
                 [[:l :k] "/opt/homebrew/bin/yabai -m window --grid 2:2:1:0:2:1"]
                ; half screens
                 [:h "/opt/homebrew/bin/yabai -m window --grid 2:2:0:0:1:2"]
                 [:j "/opt/homebrew/bin/yabai -m window --grid 2:2:0:1:2:2"]
                 [:k "/opt/homebrew/bin/yabai -m window --grid 2:2:0:0:2:1"]
                 [:l "/opt/homebrew/bin/yabai -m window --grid 2:2:1:0:2:2"]
                ; topmost
                 [:s "/opt/homebrew/bin/yabai -m window --toggle topmost"]
                ; disable other keys
                 [:anykey :vk_none]]}
        {:des "disable layer"
         :rules [[:condi :disable-layer]
                ; disabling disable-layer
                 [[:caps_lock :l] ["disable-layer" 0]]
                ; capture all keys
                 [:anykey :vk_none]]}
        {:des "window layer"
         :rules [[:condi :window-layer]
                ; disabling layer
                 [:caps_lock [["window-layer" 0] "/opt/homebrew/bin/yabai -m config normal_window_border_color 0xFF3E3E3E"]]
                ; focus window
                 [:a "/opt/homebrew/bin/yabai -m window --focus west"]
                 [:s "/opt/homebrew/bin/yabai -m window --focus south"]
                 [:d "/opt/homebrew/bin/yabai -m window --focus north"]
                 [:f "/opt/homebrew/bin/yabai -m window --focus east"]
                ; warp window
                ; we must preserve the left_shift key so it is not
                ; captured by anykey->vk_none
                 [:left_shift :left_shift]
                 [:!Sh "/opt/homebrew/bin/yabai -m window --warp west"]
                 [:!Sj "/opt/homebrew/bin/yabai -m window --warp south"]
                 [:!Sk "/opt/homebrew/bin/yabai -m window --warp north"]
                 [:!Sl "/opt/homebrew/bin/yabai -m window --warp east"]
                ; swap window
                 [:h "/opt/homebrew/bin/yabai -m window --swap west"]
                 [:j "/opt/homebrew/bin/yabai -m window --swap south"]
                 [:k "/opt/homebrew/bin/yabai -m window --swap north"]
                 [:l "/opt/homebrew/bin/yabai -m window --swap east"]
                ; toggle split direction
                 [:semicolon "/opt/homebrew/bin/yabai -m window --toggle split"]
                ; focus next display
                 [:n "/opt/homebrew/bin/yabai -m display --focus recent || /opt/homebrew/bin/yabai -m display --focus prev"]
                ; move to display
                 [:m "/opt/homebrew/bin/yabai -m window --display recent || /opt/homebrew/bin/yabai -m window --space prev"]
                ; restart yabai
                 [:o "/opt/homebrew/bin/yabai --restart-service"]
                ; capture all keys
                 [:anykey :vk_none]]}
        {:des "bind delete/backspace to button3"
         :rules [[:##delete_or_backspace :button3]]}
        {:des "royal kludge keyboard fixes"
         :rules [:white_rk
                ; swap option and windows 
                 [:##left_option :left_command]
                 [:##left_command :left_option]
                 ; top left escape to backtick
                 [:##escape :grave_accent_and_tilde]
                 ; left arrow to backspace
                 [:##right_option :delete_or_backspace]]}
        ; must come after caps-lock layer. avoid capturing right_command too early
        {:des "right command to backspace"
         :rules [[:##right_command :right_command nil {:held [:delete_or_backspace] :alone :delete_or_backspace}]]}
        {:des "click fast"
         :rules [
                 :chrome
                 [{:pkey :button2 :modi :command} "killall -9 click &> /dev/null"]
                ;;  [{:pkey :button1 :modi :any :lazy true} [{:pkey :button1} "killall -9 click &> /dev/null"]]
                 [:b ["pgrep click"]]
                 [:f ["/Users/francischua/gitprojects/click/target/release/click 20 100 27 20 right"]]
                 [:v ["killall -9 click"]]]}
                ;;  ; stop clicking
        {:des "tab to control"
         :rules [; cmd+tab should never be modified
                 [:!C##tab :!Ctab]
                 ; ctrl+tab should never be modified
                 [:!T##tab :!Ttab]
                 ; anything else will be ctrl
                 ; or tab if (alone or held)
                 [:##tab :left_control nil {:alone :tab}]
                 ; unbind ctrl for learning's sake
                 [:##left_control :vk_none]]}
        {:des "Minimal menu"
         :rules [[:escape "killall minmenu; open /Applications/minmenu.app/"]]}
        {:des "Unbind sending key for mimestream"
         :rules [:mimestream
                 [:!C#S#Rreturn_or_enter :vk_none]
                 [:!Q#S#Rreturn_or_enter :vk_none]]}
        {:des "Do not disturb without notification binding"
         :rules [[:!OCd "shortcuts run 'Toggle DnD Script'"]]}
        {:des "Open other Obsidian Vault Quickly"
         :rules [:obsidian [:!SCo "/Users/francischua/.config/karabiner/obsidian_open_vault.nu"]]}
        {:des "Open Forklift file in Arc"
         :rules [:forklift [:!SCo [:!TCc "/Users/francischua/.config/karabiner/forklift_open_file.nu"]]]}
        {:des "parentheses, dollar signs, and carets in obsidian"
         ; typst convenience bindings. made global (for use in Arc, obsidian, and iterm)
         :rules [[[:r :k] [:!S9 :!S0 :left_arrow]]; open parentheses
                 [[:m :v] [:!S4 :!S4 :left_arrow]]; open dollar sign
                 [[:r :comma] [:!S6]]; caret
                 ]}
        {:des "Temporary Binding"
         :rules []}]}; :brave
                ; [:fn :!Ctab]

